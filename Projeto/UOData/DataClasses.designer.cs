#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UOData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="euo")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaccount(account instance);
    partial void Updateaccount(account instance);
    partial void Deleteaccount(account instance);
    partial void Insertvendor(vendor instance);
    partial void Updatevendor(vendor instance);
    partial void Deletevendor(vendor instance);
    partial void Insertattributereq(attributereq instance);
    partial void Updateattributereq(attributereq instance);
    partial void Deleteattributereq(attributereq instance);
    partial void Insertattribute(attribute instance);
    partial void Updateattribute(attribute instance);
    partial void Deleteattribute(attribute instance);
    partial void Insertbank(bank instance);
    partial void Updatebank(bank instance);
    partial void Deletebank(bank instance);
    partial void Insertcontainer(container instance);
    partial void Updatecontainer(container instance);
    partial void Deletecontainer(container instance);
    partial void Insertcontainer_has_item(container_has_item instance);
    partial void Updatecontainer_has_item(container_has_item instance);
    partial void Deletecontainer_has_item(container_has_item instance);
    partial void Insertcrafting(crafting instance);
    partial void Updatecrafting(crafting instance);
    partial void Deletecrafting(crafting instance);
    partial void Insertgear(gear instance);
    partial void Updategear(gear instance);
    partial void Deletegear(gear instance);
    partial void Insertguild(guild instance);
    partial void Updateguild(guild instance);
    partial void Deleteguild(guild instance);
    partial void Insertitem(item instance);
    partial void Updateitem(item instance);
    partial void Deleteitem(item instance);
    partial void Insertitemtype(itemtype instance);
    partial void Updateitemtype(itemtype instance);
    partial void Deleteitemtype(itemtype instance);
    partial void Insertmobile(mobile instance);
    partial void Updatemobile(mobile instance);
    partial void Deletemobile(mobile instance);
    partial void Insertmonster(monster instance);
    partial void Updatemonster(monster instance);
    partial void Deletemonster(monster instance);
    partial void Insertnpc(npc instance);
    partial void Updatenpc(npc instance);
    partial void Deletenpc(npc instance);
    partial void Insertplayer(player instance);
    partial void Updateplayer(player instance);
    partial void Deleteplayer(player instance);
    partial void Insertresistance(resistance instance);
    partial void Updateresistance(resistance instance);
    partial void Deleteresistance(resistance instance);
    partial void Insertskill(skill instance);
    partial void Updateskill(skill instance);
    partial void Deleteskill(skill instance);
    partial void Insertskilllist(skilllist instance);
    partial void Updateskilllist(skilllist instance);
    partial void Deleteskilllist(skilllist instance);
    partial void Insertskillreq(skillreq instance);
    partial void Updateskillreq(skillreq instance);
    partial void Deleteskillreq(skillreq instance);
    partial void Insertspell(spell instance);
    partial void Updatespell(spell instance);
    partial void Deletespell(spell instance);
    partial void Insertspellreag(spellreag instance);
    partial void Updatespellreag(spellreag instance);
    partial void Deletespellreag(spellreag instance);
    partial void Insertstyle(style instance);
    partial void Updatestyle(style instance);
    partial void Deletestyle(style instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::UOData.Properties.Settings.Default.euoConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<account> accounts
		{
			get
			{
				return this.GetTable<account>();
			}
		}
		
		public System.Data.Linq.Table<vendor> vendors
		{
			get
			{
				return this.GetTable<vendor>();
			}
		}
		
		public System.Data.Linq.Table<attributereq> attributereqs
		{
			get
			{
				return this.GetTable<attributereq>();
			}
		}
		
		public System.Data.Linq.Table<attribute> attributes
		{
			get
			{
				return this.GetTable<attribute>();
			}
		}
		
		public System.Data.Linq.Table<bank> banks
		{
			get
			{
				return this.GetTable<bank>();
			}
		}
		
		public System.Data.Linq.Table<container> containers
		{
			get
			{
				return this.GetTable<container>();
			}
		}
		
		public System.Data.Linq.Table<container_has_item> container_has_items
		{
			get
			{
				return this.GetTable<container_has_item>();
			}
		}
		
		public System.Data.Linq.Table<crafting> craftings
		{
			get
			{
				return this.GetTable<crafting>();
			}
		}
		
		public System.Data.Linq.Table<gear> gears
		{
			get
			{
				return this.GetTable<gear>();
			}
		}
		
		public System.Data.Linq.Table<guild> guilds
		{
			get
			{
				return this.GetTable<guild>();
			}
		}
		
		public System.Data.Linq.Table<item> items
		{
			get
			{
				return this.GetTable<item>();
			}
		}
		
		public System.Data.Linq.Table<itemtype> itemtypes
		{
			get
			{
				return this.GetTable<itemtype>();
			}
		}
		
		public System.Data.Linq.Table<mobile> mobiles
		{
			get
			{
				return this.GetTable<mobile>();
			}
		}
		
		public System.Data.Linq.Table<monster> monsters
		{
			get
			{
				return this.GetTable<monster>();
			}
		}
		
		public System.Data.Linq.Table<npc> npcs
		{
			get
			{
				return this.GetTable<npc>();
			}
		}
		
		public System.Data.Linq.Table<player> players
		{
			get
			{
				return this.GetTable<player>();
			}
		}
		
		public System.Data.Linq.Table<resistance> resistances
		{
			get
			{
				return this.GetTable<resistance>();
			}
		}
		
		public System.Data.Linq.Table<skill> skills
		{
			get
			{
				return this.GetTable<skill>();
			}
		}
		
		public System.Data.Linq.Table<skilllist> skilllists
		{
			get
			{
				return this.GetTable<skilllist>();
			}
		}
		
		public System.Data.Linq.Table<skillreq> skillreqs
		{
			get
			{
				return this.GetTable<skillreq>();
			}
		}
		
		public System.Data.Linq.Table<spell> spells
		{
			get
			{
				return this.GetTable<spell>();
			}
		}
		
		public System.Data.Linq.Table<spellreag> spellreags
		{
			get
			{
				return this.GetTable<spellreag>();
			}
		}
		
		public System.Data.Linq.Table<style> styles
		{
			get
			{
				return this.GetTable<style>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.account")]
	public partial class account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _passwd;
		
		private string _accesslevel;
		
		private System.Nullable<int> _flags;
		
		private System.Nullable<System.DateTime> _created;
		
		private System.Nullable<System.DateTime> _lastlogin;
		
		private System.Nullable<System.DateTime> _totalgametime;
		
		private System.Nullable<System.DateTime> _youngduration;
		
		private EntitySet<player> _players;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswdChanging(string value);
    partial void OnpasswdChanged();
    partial void OnaccesslevelChanging(string value);
    partial void OnaccesslevelChanged();
    partial void OnflagsChanging(System.Nullable<int> value);
    partial void OnflagsChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    partial void OnlastloginChanging(System.Nullable<System.DateTime> value);
    partial void OnlastloginChanged();
    partial void OntotalgametimeChanging(System.Nullable<System.DateTime> value);
    partial void OntotalgametimeChanged();
    partial void OnyoungdurationChanging(System.Nullable<System.DateTime> value);
    partial void OnyoungdurationChanged();
    #endregion
		
		public account()
		{
			this._players = new EntitySet<player>(new Action<player>(this.attach_players), new Action<player>(this.detach_players));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwd", DbType="NVarChar(50)")]
		public string passwd
		{
			get
			{
				return this._passwd;
			}
			set
			{
				if ((this._passwd != value))
				{
					this.OnpasswdChanging(value);
					this.SendPropertyChanging();
					this._passwd = value;
					this.SendPropertyChanged("passwd");
					this.OnpasswdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accesslevel", DbType="NChar(6)")]
		public string accesslevel
		{
			get
			{
				return this._accesslevel;
			}
			set
			{
				if ((this._accesslevel != value))
				{
					this.OnaccesslevelChanging(value);
					this.SendPropertyChanging();
					this._accesslevel = value;
					this.SendPropertyChanged("accesslevel");
					this.OnaccesslevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flags", DbType="Int")]
		public System.Nullable<int> flags
		{
			get
			{
				return this._flags;
			}
			set
			{
				if ((this._flags != value))
				{
					this.OnflagsChanging(value);
					this.SendPropertyChanging();
					this._flags = value;
					this.SendPropertyChanged("flags");
					this.OnflagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime")]
		public System.Nullable<System.DateTime> created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastlogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastlogin
		{
			get
			{
				return this._lastlogin;
			}
			set
			{
				if ((this._lastlogin != value))
				{
					this.OnlastloginChanging(value);
					this.SendPropertyChanging();
					this._lastlogin = value;
					this.SendPropertyChanged("lastlogin");
					this.OnlastloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalgametime", DbType="DateTime")]
		public System.Nullable<System.DateTime> totalgametime
		{
			get
			{
				return this._totalgametime;
			}
			set
			{
				if ((this._totalgametime != value))
				{
					this.OntotalgametimeChanging(value);
					this.SendPropertyChanging();
					this._totalgametime = value;
					this.SendPropertyChanged("totalgametime");
					this.OntotalgametimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_youngduration", DbType="DateTime")]
		public System.Nullable<System.DateTime> youngduration
		{
			get
			{
				return this._youngduration;
			}
			set
			{
				if ((this._youngduration != value))
				{
					this.OnyoungdurationChanging(value);
					this.SendPropertyChanging();
					this._youngduration = value;
					this.SendPropertyChanged("youngduration");
					this.OnyoungdurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_player", Storage="_players", ThisKey="id", OtherKey="account_id")]
		public EntitySet<player> players
		{
			get
			{
				return this._players;
			}
			set
			{
				this._players.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_players(player entity)
		{
			this.SendPropertyChanging();
			entity.account = this;
		}
		
		private void detach_players(player entity)
		{
			this.SendPropertyChanging();
			entity.account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vendor")]
	public partial class vendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _mobile_id;
		
		private System.Nullable<int> _player_id;
		
		private EntityRef<mobile> _mobile;
		
		private EntityRef<player> _player;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onmobile_idChanging(System.Nullable<int> value);
    partial void Onmobile_idChanged();
    partial void Onplayer_idChanging(System.Nullable<int> value);
    partial void Onplayer_idChanged();
    #endregion
		
		public vendor()
		{
			this._mobile = default(EntityRef<mobile>);
			this._player = default(EntityRef<player>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile_id", DbType="Int")]
		public System.Nullable<int> mobile_id
		{
			get
			{
				return this._mobile_id;
			}
			set
			{
				if ((this._mobile_id != value))
				{
					if (this._mobile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmobile_idChanging(value);
					this.SendPropertyChanging();
					this._mobile_id = value;
					this.SendPropertyChanged("mobile_id");
					this.Onmobile_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player_id", DbType="Int")]
		public System.Nullable<int> player_id
		{
			get
			{
				return this._player_id;
			}
			set
			{
				if ((this._player_id != value))
				{
					if (this._player.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onplayer_idChanging(value);
					this.SendPropertyChanging();
					this._player_id = value;
					this.SendPropertyChanged("player_id");
					this.Onplayer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mobile_vendor", Storage="_mobile", ThisKey="mobile_id", OtherKey="id", IsForeignKey=true)]
		public mobile mobile
		{
			get
			{
				return this._mobile.Entity;
			}
			set
			{
				mobile previousValue = this._mobile.Entity;
				if (((previousValue != value) 
							|| (this._mobile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mobile.Entity = null;
						previousValue.vendors.Remove(this);
					}
					this._mobile.Entity = value;
					if ((value != null))
					{
						value.vendors.Add(this);
						this._mobile_id = value.id;
					}
					else
					{
						this._mobile_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("mobile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="player_vendor", Storage="_player", ThisKey="player_id", OtherKey="id", IsForeignKey=true)]
		public player player
		{
			get
			{
				return this._player.Entity;
			}
			set
			{
				player previousValue = this._player.Entity;
				if (((previousValue != value) 
							|| (this._player.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._player.Entity = null;
						previousValue.vendors.Remove(this);
					}
					this._player.Entity = value;
					if ((value != null))
					{
						value.vendors.Add(this);
						this._player_id = value.id;
					}
					else
					{
						this._player_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("player");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.attributereq")]
	public partial class attributereq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<double> _int;
		
		private System.Nullable<double> _dex;
		
		private System.Nullable<double> _str;
		
		private System.Nullable<int> _hitpoint;
		
		private System.Nullable<int> _mana;
		
		private EntitySet<itemtype> _itemtypes;
		
		private EntitySet<spell> _spells;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnintChanging(System.Nullable<double> value);
    partial void OnintChanged();
    partial void OndexChanging(System.Nullable<double> value);
    partial void OndexChanged();
    partial void OnstrChanging(System.Nullable<double> value);
    partial void OnstrChanged();
    partial void OnhitpointChanging(System.Nullable<int> value);
    partial void OnhitpointChanged();
    partial void OnmanaChanging(System.Nullable<int> value);
    partial void OnmanaChanged();
    #endregion
		
		public attributereq()
		{
			this._itemtypes = new EntitySet<itemtype>(new Action<itemtype>(this.attach_itemtypes), new Action<itemtype>(this.detach_itemtypes));
			this._spells = new EntitySet<spell>(new Action<spell>(this.attach_spells), new Action<spell>(this.detach_spells));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="int", Storage="_int", DbType="Float")]
		public System.Nullable<double> @int
		{
			get
			{
				return this._int;
			}
			set
			{
				if ((this._int != value))
				{
					this.OnintChanging(value);
					this.SendPropertyChanging();
					this._int = value;
					this.SendPropertyChanged("@int");
					this.OnintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dex", DbType="Float")]
		public System.Nullable<double> dex
		{
			get
			{
				return this._dex;
			}
			set
			{
				if ((this._dex != value))
				{
					this.OndexChanging(value);
					this.SendPropertyChanging();
					this._dex = value;
					this.SendPropertyChanged("dex");
					this.OndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_str", DbType="Float")]
		public System.Nullable<double> str
		{
			get
			{
				return this._str;
			}
			set
			{
				if ((this._str != value))
				{
					this.OnstrChanging(value);
					this.SendPropertyChanging();
					this._str = value;
					this.SendPropertyChanged("str");
					this.OnstrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hitpoint", DbType="Int")]
		public System.Nullable<int> hitpoint
		{
			get
			{
				return this._hitpoint;
			}
			set
			{
				if ((this._hitpoint != value))
				{
					this.OnhitpointChanging(value);
					this.SendPropertyChanging();
					this._hitpoint = value;
					this.SendPropertyChanged("hitpoint");
					this.OnhitpointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mana", DbType="Int")]
		public System.Nullable<int> mana
		{
			get
			{
				return this._mana;
			}
			set
			{
				if ((this._mana != value))
				{
					this.OnmanaChanging(value);
					this.SendPropertyChanging();
					this._mana = value;
					this.SendPropertyChanged("mana");
					this.OnmanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="attributereq_itemtype", Storage="_itemtypes", ThisKey="id", OtherKey="attributereq_id")]
		public EntitySet<itemtype> itemtypes
		{
			get
			{
				return this._itemtypes;
			}
			set
			{
				this._itemtypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="attributereq_spell", Storage="_spells", ThisKey="id", OtherKey="attributereq_id")]
		public EntitySet<spell> spells
		{
			get
			{
				return this._spells;
			}
			set
			{
				this._spells.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_itemtypes(itemtype entity)
		{
			this.SendPropertyChanging();
			entity.attributereq = this;
		}
		
		private void detach_itemtypes(itemtype entity)
		{
			this.SendPropertyChanging();
			entity.attributereq = null;
		}
		
		private void attach_spells(spell entity)
		{
			this.SendPropertyChanging();
			entity.attributereq = this;
		}
		
		private void detach_spells(spell entity)
		{
			this.SendPropertyChanging();
			entity.attributereq = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.attributes")]
	public partial class attribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _strength;
		
		private System.Nullable<int> _dexterity;
		
		private System.Nullable<int> _intelligence;
		
		private System.Nullable<int> _hitpoints;
		
		private System.Nullable<int> _mana;
		
		private EntitySet<mobile> _mobiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrengthChanging(System.Nullable<int> value);
    partial void OnstrengthChanged();
    partial void OndexterityChanging(System.Nullable<int> value);
    partial void OndexterityChanged();
    partial void OnintelligenceChanging(System.Nullable<int> value);
    partial void OnintelligenceChanged();
    partial void OnhitpointsChanging(System.Nullable<int> value);
    partial void OnhitpointsChanged();
    partial void OnmanaChanging(System.Nullable<int> value);
    partial void OnmanaChanged();
    #endregion
		
		public attribute()
		{
			this._mobiles = new EntitySet<mobile>(new Action<mobile>(this.attach_mobiles), new Action<mobile>(this.detach_mobiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strength", DbType="Int")]
		public System.Nullable<int> strength
		{
			get
			{
				return this._strength;
			}
			set
			{
				if ((this._strength != value))
				{
					this.OnstrengthChanging(value);
					this.SendPropertyChanging();
					this._strength = value;
					this.SendPropertyChanged("strength");
					this.OnstrengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dexterity", DbType="Int")]
		public System.Nullable<int> dexterity
		{
			get
			{
				return this._dexterity;
			}
			set
			{
				if ((this._dexterity != value))
				{
					this.OndexterityChanging(value);
					this.SendPropertyChanging();
					this._dexterity = value;
					this.SendPropertyChanged("dexterity");
					this.OndexterityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intelligence", DbType="Int")]
		public System.Nullable<int> intelligence
		{
			get
			{
				return this._intelligence;
			}
			set
			{
				if ((this._intelligence != value))
				{
					this.OnintelligenceChanging(value);
					this.SendPropertyChanging();
					this._intelligence = value;
					this.SendPropertyChanged("intelligence");
					this.OnintelligenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hitpoints", DbType="Int")]
		public System.Nullable<int> hitpoints
		{
			get
			{
				return this._hitpoints;
			}
			set
			{
				if ((this._hitpoints != value))
				{
					this.OnhitpointsChanging(value);
					this.SendPropertyChanging();
					this._hitpoints = value;
					this.SendPropertyChanged("hitpoints");
					this.OnhitpointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mana", DbType="Int")]
		public System.Nullable<int> mana
		{
			get
			{
				return this._mana;
			}
			set
			{
				if ((this._mana != value))
				{
					this.OnmanaChanging(value);
					this.SendPropertyChanging();
					this._mana = value;
					this.SendPropertyChanged("mana");
					this.OnmanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="attribute_mobile", Storage="_mobiles", ThisKey="id", OtherKey="attributes_id")]
		public EntitySet<mobile> mobiles
		{
			get
			{
				return this._mobiles;
			}
			set
			{
				this._mobiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mobiles(mobile entity)
		{
			this.SendPropertyChanging();
			entity.attribute = this;
		}
		
		private void detach_mobiles(mobile entity)
		{
			this.SendPropertyChanging();
			entity.attribute = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bank")]
	public partial class bank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _container_id;
		
		private EntitySet<player> _players;
		
		private EntityRef<container> _container;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncontainer_idChanging(System.Nullable<int> value);
    partial void Oncontainer_idChanged();
    #endregion
		
		public bank()
		{
			this._players = new EntitySet<player>(new Action<player>(this.attach_players), new Action<player>(this.detach_players));
			this._container = default(EntityRef<container>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_container_id", DbType="Int")]
		public System.Nullable<int> container_id
		{
			get
			{
				return this._container_id;
			}
			set
			{
				if ((this._container_id != value))
				{
					if (this._container.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncontainer_idChanging(value);
					this.SendPropertyChanging();
					this._container_id = value;
					this.SendPropertyChanged("container_id");
					this.Oncontainer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bank_player", Storage="_players", ThisKey="id", OtherKey="bank_id")]
		public EntitySet<player> players
		{
			get
			{
				return this._players;
			}
			set
			{
				this._players.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="container_bank", Storage="_container", ThisKey="container_id", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public container container
		{
			get
			{
				return this._container.Entity;
			}
			set
			{
				container previousValue = this._container.Entity;
				if (((previousValue != value) 
							|| (this._container.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._container.Entity = null;
						previousValue.banks.Remove(this);
					}
					this._container.Entity = value;
					if ((value != null))
					{
						value.banks.Add(this);
						this._container_id = value.id;
					}
					else
					{
						this._container_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("container");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_players(player entity)
		{
			this.SendPropertyChanging();
			entity.bank = this;
		}
		
		private void detach_players(player entity)
		{
			this.SendPropertyChanging();
			entity.bank = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.container")]
	public partial class container : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _item_id;
		
		private EntitySet<bank> _banks;
		
		private EntitySet<container_has_item> _container_has_items;
		
		private EntitySet<mobile> _mobiles;
		
		private EntityRef<item> _item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onitem_idChanging(System.Nullable<int> value);
    partial void Onitem_idChanged();
    #endregion
		
		public container()
		{
			this._banks = new EntitySet<bank>(new Action<bank>(this.attach_banks), new Action<bank>(this.detach_banks));
			this._container_has_items = new EntitySet<container_has_item>(new Action<container_has_item>(this.attach_container_has_items), new Action<container_has_item>(this.detach_container_has_items));
			this._mobiles = new EntitySet<mobile>(new Action<mobile>(this.attach_mobiles), new Action<mobile>(this.detach_mobiles));
			this._item = default(EntityRef<item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_id", DbType="Int")]
		public System.Nullable<int> item_id
		{
			get
			{
				return this._item_id;
			}
			set
			{
				if ((this._item_id != value))
				{
					if (this._item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem_idChanging(value);
					this.SendPropertyChanging();
					this._item_id = value;
					this.SendPropertyChanged("item_id");
					this.Onitem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="container_bank", Storage="_banks", ThisKey="id", OtherKey="container_id")]
		public EntitySet<bank> banks
		{
			get
			{
				return this._banks;
			}
			set
			{
				this._banks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="container_container_has_item", Storage="_container_has_items", ThisKey="id", OtherKey="container_id")]
		public EntitySet<container_has_item> container_has_items
		{
			get
			{
				return this._container_has_items;
			}
			set
			{
				this._container_has_items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="container_mobile", Storage="_mobiles", ThisKey="id", OtherKey="backpack_id")]
		public EntitySet<mobile> mobiles
		{
			get
			{
				return this._mobiles;
			}
			set
			{
				this._mobiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_container", Storage="_item", ThisKey="item_id", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public item item
		{
			get
			{
				return this._item.Entity;
			}
			set
			{
				item previousValue = this._item.Entity;
				if (((previousValue != value) 
							|| (this._item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item.Entity = null;
						previousValue.containers.Remove(this);
					}
					this._item.Entity = value;
					if ((value != null))
					{
						value.containers.Add(this);
						this._item_id = value.id;
					}
					else
					{
						this._item_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_banks(bank entity)
		{
			this.SendPropertyChanging();
			entity.container = this;
		}
		
		private void detach_banks(bank entity)
		{
			this.SendPropertyChanging();
			entity.container = null;
		}
		
		private void attach_container_has_items(container_has_item entity)
		{
			this.SendPropertyChanging();
			entity.container = this;
		}
		
		private void detach_container_has_items(container_has_item entity)
		{
			this.SendPropertyChanging();
			entity.container = null;
		}
		
		private void attach_mobiles(mobile entity)
		{
			this.SendPropertyChanging();
			entity.container = this;
		}
		
		private void detach_mobiles(mobile entity)
		{
			this.SendPropertyChanging();
			entity.container = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.container_has_item")]
	public partial class container_has_item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _container_id;
		
		private int _item_id;
		
		private EntityRef<container> _container;
		
		private EntityRef<item> _item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncontainer_idChanging(int value);
    partial void Oncontainer_idChanged();
    partial void Onitem_idChanging(int value);
    partial void Onitem_idChanged();
    #endregion
		
		public container_has_item()
		{
			this._container = default(EntityRef<container>);
			this._item = default(EntityRef<item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_container_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int container_id
		{
			get
			{
				return this._container_id;
			}
			set
			{
				if ((this._container_id != value))
				{
					if (this._container.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncontainer_idChanging(value);
					this.SendPropertyChanging();
					this._container_id = value;
					this.SendPropertyChanged("container_id");
					this.Oncontainer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int item_id
		{
			get
			{
				return this._item_id;
			}
			set
			{
				if ((this._item_id != value))
				{
					if (this._item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem_idChanging(value);
					this.SendPropertyChanging();
					this._item_id = value;
					this.SendPropertyChanged("item_id");
					this.Onitem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="container_container_has_item", Storage="_container", ThisKey="container_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public container container
		{
			get
			{
				return this._container.Entity;
			}
			set
			{
				container previousValue = this._container.Entity;
				if (((previousValue != value) 
							|| (this._container.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._container.Entity = null;
						previousValue.container_has_items.Remove(this);
					}
					this._container.Entity = value;
					if ((value != null))
					{
						value.container_has_items.Add(this);
						this._container_id = value.id;
					}
					else
					{
						this._container_id = default(int);
					}
					this.SendPropertyChanged("container");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_container_has_item", Storage="_item", ThisKey="item_id", OtherKey="id", IsForeignKey=true)]
		public item item
		{
			get
			{
				return this._item.Entity;
			}
			set
			{
				item previousValue = this._item.Entity;
				if (((previousValue != value) 
							|| (this._item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item.Entity = null;
						previousValue.container_has_items.Remove(this);
					}
					this._item.Entity = value;
					if ((value != null))
					{
						value.container_has_items.Add(this);
						this._item_id = value.id;
					}
					else
					{
						this._item_id = default(int);
					}
					this.SendPropertyChanged("item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crafting")]
	public partial class crafting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _resource_needed;
		
		private System.Nullable<int> _crafted_item;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<bool> _consume;
		
		private EntityRef<itemtype> _itemtype;
		
		private EntityRef<itemtype> _itemtype1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onresource_neededChanging(System.Nullable<int> value);
    partial void Onresource_neededChanged();
    partial void Oncrafted_itemChanging(System.Nullable<int> value);
    partial void Oncrafted_itemChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnconsumeChanging(System.Nullable<bool> value);
    partial void OnconsumeChanged();
    #endregion
		
		public crafting()
		{
			this._itemtype = default(EntityRef<itemtype>);
			this._itemtype1 = default(EntityRef<itemtype>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resource_needed", DbType="Int")]
		public System.Nullable<int> resource_needed
		{
			get
			{
				return this._resource_needed;
			}
			set
			{
				if ((this._resource_needed != value))
				{
					if (this._itemtype.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onresource_neededChanging(value);
					this.SendPropertyChanging();
					this._resource_needed = value;
					this.SendPropertyChanged("resource_needed");
					this.Onresource_neededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crafted_item", DbType="Int")]
		public System.Nullable<int> crafted_item
		{
			get
			{
				return this._crafted_item;
			}
			set
			{
				if ((this._crafted_item != value))
				{
					if (this._itemtype1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncrafted_itemChanging(value);
					this.SendPropertyChanging();
					this._crafted_item = value;
					this.SendPropertyChanged("crafted_item");
					this.Oncrafted_itemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_consume", DbType="Bit")]
		public System.Nullable<bool> consume
		{
			get
			{
				return this._consume;
			}
			set
			{
				if ((this._consume != value))
				{
					this.OnconsumeChanging(value);
					this.SendPropertyChanging();
					this._consume = value;
					this.SendPropertyChanged("consume");
					this.OnconsumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="itemtype_crafting", Storage="_itemtype", ThisKey="resource_needed", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public itemtype itemtype
		{
			get
			{
				return this._itemtype.Entity;
			}
			set
			{
				itemtype previousValue = this._itemtype.Entity;
				if (((previousValue != value) 
							|| (this._itemtype.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._itemtype.Entity = null;
						previousValue.craftings.Remove(this);
					}
					this._itemtype.Entity = value;
					if ((value != null))
					{
						value.craftings.Add(this);
						this._resource_needed = value.id;
					}
					else
					{
						this._resource_needed = default(Nullable<int>);
					}
					this.SendPropertyChanged("itemtype");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="itemtype_crafting1", Storage="_itemtype1", ThisKey="crafted_item", OtherKey="id", IsForeignKey=true)]
		public itemtype itemtype1
		{
			get
			{
				return this._itemtype1.Entity;
			}
			set
			{
				itemtype previousValue = this._itemtype1.Entity;
				if (((previousValue != value) 
							|| (this._itemtype1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._itemtype1.Entity = null;
						previousValue.craftings1.Remove(this);
					}
					this._itemtype1.Entity = value;
					if ((value != null))
					{
						value.craftings1.Add(this);
						this._crafted_item = value.id;
					}
					else
					{
						this._crafted_item = default(Nullable<int>);
					}
					this.SendPropertyChanged("itemtype1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gears")]
	public partial class gear : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _head;
		
		private System.Nullable<int> _chest;
		
		private System.Nullable<int> _arms;
		
		private System.Nullable<int> _gloves;
		
		private System.Nullable<int> _legs;
		
		private System.Nullable<int> _shoes;
		
		private System.Nullable<int> _ring;
		
		private System.Nullable<int> _lefthand;
		
		private System.Nullable<int> _righthand;
		
		private System.Nullable<int> _bracelet;
		
		private EntitySet<mobile> _mobiles;
		
		private EntityRef<item> _item;
		
		private EntityRef<item> _item1;
		
		private EntityRef<item> _item2;
		
		private EntityRef<item> _item3;
		
		private EntityRef<item> _item4;
		
		private EntityRef<item> _item5;
		
		private EntityRef<item> _item6;
		
		private EntityRef<item> _item7;
		
		private EntityRef<item> _item8;
		
		private EntityRef<item> _item9;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnheadChanging(System.Nullable<int> value);
    partial void OnheadChanged();
    partial void OnchestChanging(System.Nullable<int> value);
    partial void OnchestChanged();
    partial void OnarmsChanging(System.Nullable<int> value);
    partial void OnarmsChanged();
    partial void OnglovesChanging(System.Nullable<int> value);
    partial void OnglovesChanged();
    partial void OnlegsChanging(System.Nullable<int> value);
    partial void OnlegsChanged();
    partial void OnshoesChanging(System.Nullable<int> value);
    partial void OnshoesChanged();
    partial void OnringChanging(System.Nullable<int> value);
    partial void OnringChanged();
    partial void OnlefthandChanging(System.Nullable<int> value);
    partial void OnlefthandChanged();
    partial void OnrighthandChanging(System.Nullable<int> value);
    partial void OnrighthandChanged();
    partial void OnbraceletChanging(System.Nullable<int> value);
    partial void OnbraceletChanged();
    #endregion
		
		public gear()
		{
			this._mobiles = new EntitySet<mobile>(new Action<mobile>(this.attach_mobiles), new Action<mobile>(this.detach_mobiles));
			this._item = default(EntityRef<item>);
			this._item1 = default(EntityRef<item>);
			this._item2 = default(EntityRef<item>);
			this._item3 = default(EntityRef<item>);
			this._item4 = default(EntityRef<item>);
			this._item5 = default(EntityRef<item>);
			this._item6 = default(EntityRef<item>);
			this._item7 = default(EntityRef<item>);
			this._item8 = default(EntityRef<item>);
			this._item9 = default(EntityRef<item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_head", DbType="Int")]
		public System.Nullable<int> head
		{
			get
			{
				return this._head;
			}
			set
			{
				if ((this._head != value))
				{
					if (this._item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnheadChanging(value);
					this.SendPropertyChanging();
					this._head = value;
					this.SendPropertyChanged("head");
					this.OnheadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chest", DbType="Int")]
		public System.Nullable<int> chest
		{
			get
			{
				return this._chest;
			}
			set
			{
				if ((this._chest != value))
				{
					if (this._item2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnchestChanging(value);
					this.SendPropertyChanging();
					this._chest = value;
					this.SendPropertyChanged("chest");
					this.OnchestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arms", DbType="Int")]
		public System.Nullable<int> arms
		{
			get
			{
				return this._arms;
			}
			set
			{
				if ((this._arms != value))
				{
					if (this._item3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnarmsChanging(value);
					this.SendPropertyChanging();
					this._arms = value;
					this.SendPropertyChanged("arms");
					this.OnarmsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gloves", DbType="Int")]
		public System.Nullable<int> gloves
		{
			get
			{
				return this._gloves;
			}
			set
			{
				if ((this._gloves != value))
				{
					if (this._item4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnglovesChanging(value);
					this.SendPropertyChanging();
					this._gloves = value;
					this.SendPropertyChanged("gloves");
					this.OnglovesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_legs", DbType="Int")]
		public System.Nullable<int> legs
		{
			get
			{
				return this._legs;
			}
			set
			{
				if ((this._legs != value))
				{
					if (this._item5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlegsChanging(value);
					this.SendPropertyChanging();
					this._legs = value;
					this.SendPropertyChanged("legs");
					this.OnlegsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoes", DbType="Int")]
		public System.Nullable<int> shoes
		{
			get
			{
				return this._shoes;
			}
			set
			{
				if ((this._shoes != value))
				{
					if (this._item6.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshoesChanging(value);
					this.SendPropertyChanging();
					this._shoes = value;
					this.SendPropertyChanged("shoes");
					this.OnshoesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ring", DbType="Int")]
		public System.Nullable<int> ring
		{
			get
			{
				return this._ring;
			}
			set
			{
				if ((this._ring != value))
				{
					if (this._item7.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnringChanging(value);
					this.SendPropertyChanging();
					this._ring = value;
					this.SendPropertyChanged("ring");
					this.OnringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lefthand", DbType="Int")]
		public System.Nullable<int> lefthand
		{
			get
			{
				return this._lefthand;
			}
			set
			{
				if ((this._lefthand != value))
				{
					if (this._item8.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlefthandChanging(value);
					this.SendPropertyChanging();
					this._lefthand = value;
					this.SendPropertyChanged("lefthand");
					this.OnlefthandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_righthand", DbType="Int")]
		public System.Nullable<int> righthand
		{
			get
			{
				return this._righthand;
			}
			set
			{
				if ((this._righthand != value))
				{
					if (this._item1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrighthandChanging(value);
					this.SendPropertyChanging();
					this._righthand = value;
					this.SendPropertyChanged("righthand");
					this.OnrighthandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bracelet", DbType="Int")]
		public System.Nullable<int> bracelet
		{
			get
			{
				return this._bracelet;
			}
			set
			{
				if ((this._bracelet != value))
				{
					if (this._item9.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbraceletChanging(value);
					this.SendPropertyChanging();
					this._bracelet = value;
					this.SendPropertyChanged("bracelet");
					this.OnbraceletChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="gear_mobile", Storage="_mobiles", ThisKey="id", OtherKey="gears_id")]
		public EntitySet<mobile> mobiles
		{
			get
			{
				return this._mobiles;
			}
			set
			{
				this._mobiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear", Storage="_item", ThisKey="head", OtherKey="id", IsForeignKey=true, DeleteRule="SET NULL")]
		public item item
		{
			get
			{
				return this._item.Entity;
			}
			set
			{
				item previousValue = this._item.Entity;
				if (((previousValue != value) 
							|| (this._item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item.Entity = null;
						previousValue.gears.Remove(this);
					}
					this._item.Entity = value;
					if ((value != null))
					{
						value.gears.Add(this);
						this._head = value.id;
					}
					else
					{
						this._head = default(Nullable<int>);
					}
					this.SendPropertyChanged("item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear1", Storage="_item1", ThisKey="righthand", OtherKey="id", IsForeignKey=true)]
		public item item1
		{
			get
			{
				return this._item1.Entity;
			}
			set
			{
				item previousValue = this._item1.Entity;
				if (((previousValue != value) 
							|| (this._item1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item1.Entity = null;
						previousValue.gears1.Remove(this);
					}
					this._item1.Entity = value;
					if ((value != null))
					{
						value.gears1.Add(this);
						this._righthand = value.id;
					}
					else
					{
						this._righthand = default(Nullable<int>);
					}
					this.SendPropertyChanged("item1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear2", Storage="_item2", ThisKey="chest", OtherKey="id", IsForeignKey=true)]
		public item item2
		{
			get
			{
				return this._item2.Entity;
			}
			set
			{
				item previousValue = this._item2.Entity;
				if (((previousValue != value) 
							|| (this._item2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item2.Entity = null;
						previousValue.gears2.Remove(this);
					}
					this._item2.Entity = value;
					if ((value != null))
					{
						value.gears2.Add(this);
						this._chest = value.id;
					}
					else
					{
						this._chest = default(Nullable<int>);
					}
					this.SendPropertyChanged("item2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear3", Storage="_item3", ThisKey="arms", OtherKey="id", IsForeignKey=true)]
		public item item3
		{
			get
			{
				return this._item3.Entity;
			}
			set
			{
				item previousValue = this._item3.Entity;
				if (((previousValue != value) 
							|| (this._item3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item3.Entity = null;
						previousValue.gears3.Remove(this);
					}
					this._item3.Entity = value;
					if ((value != null))
					{
						value.gears3.Add(this);
						this._arms = value.id;
					}
					else
					{
						this._arms = default(Nullable<int>);
					}
					this.SendPropertyChanged("item3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear4", Storage="_item4", ThisKey="gloves", OtherKey="id", IsForeignKey=true)]
		public item item4
		{
			get
			{
				return this._item4.Entity;
			}
			set
			{
				item previousValue = this._item4.Entity;
				if (((previousValue != value) 
							|| (this._item4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item4.Entity = null;
						previousValue.gears4.Remove(this);
					}
					this._item4.Entity = value;
					if ((value != null))
					{
						value.gears4.Add(this);
						this._gloves = value.id;
					}
					else
					{
						this._gloves = default(Nullable<int>);
					}
					this.SendPropertyChanged("item4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear5", Storage="_item5", ThisKey="legs", OtherKey="id", IsForeignKey=true)]
		public item item5
		{
			get
			{
				return this._item5.Entity;
			}
			set
			{
				item previousValue = this._item5.Entity;
				if (((previousValue != value) 
							|| (this._item5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item5.Entity = null;
						previousValue.gears5.Remove(this);
					}
					this._item5.Entity = value;
					if ((value != null))
					{
						value.gears5.Add(this);
						this._legs = value.id;
					}
					else
					{
						this._legs = default(Nullable<int>);
					}
					this.SendPropertyChanged("item5");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear6", Storage="_item6", ThisKey="shoes", OtherKey="id", IsForeignKey=true)]
		public item item6
		{
			get
			{
				return this._item6.Entity;
			}
			set
			{
				item previousValue = this._item6.Entity;
				if (((previousValue != value) 
							|| (this._item6.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item6.Entity = null;
						previousValue.gears6.Remove(this);
					}
					this._item6.Entity = value;
					if ((value != null))
					{
						value.gears6.Add(this);
						this._shoes = value.id;
					}
					else
					{
						this._shoes = default(Nullable<int>);
					}
					this.SendPropertyChanged("item6");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear7", Storage="_item7", ThisKey="ring", OtherKey="id", IsForeignKey=true)]
		public item item7
		{
			get
			{
				return this._item7.Entity;
			}
			set
			{
				item previousValue = this._item7.Entity;
				if (((previousValue != value) 
							|| (this._item7.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item7.Entity = null;
						previousValue.gears7.Remove(this);
					}
					this._item7.Entity = value;
					if ((value != null))
					{
						value.gears7.Add(this);
						this._ring = value.id;
					}
					else
					{
						this._ring = default(Nullable<int>);
					}
					this.SendPropertyChanged("item7");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear8", Storage="_item8", ThisKey="lefthand", OtherKey="id", IsForeignKey=true)]
		public item item8
		{
			get
			{
				return this._item8.Entity;
			}
			set
			{
				item previousValue = this._item8.Entity;
				if (((previousValue != value) 
							|| (this._item8.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item8.Entity = null;
						previousValue.gears8.Remove(this);
					}
					this._item8.Entity = value;
					if ((value != null))
					{
						value.gears8.Add(this);
						this._lefthand = value.id;
					}
					else
					{
						this._lefthand = default(Nullable<int>);
					}
					this.SendPropertyChanged("item8");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear9", Storage="_item9", ThisKey="bracelet", OtherKey="id", IsForeignKey=true)]
		public item item9
		{
			get
			{
				return this._item9.Entity;
			}
			set
			{
				item previousValue = this._item9.Entity;
				if (((previousValue != value) 
							|| (this._item9.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item9.Entity = null;
						previousValue.gears9.Remove(this);
					}
					this._item9.Entity = value;
					if ((value != null))
					{
						value.gears9.Add(this);
						this._bracelet = value.id;
					}
					else
					{
						this._bracelet = default(Nullable<int>);
					}
					this.SendPropertyChanged("item9");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mobiles(mobile entity)
		{
			this.SendPropertyChanging();
			entity.gear = this;
		}
		
		private void detach_mobiles(mobile entity)
		{
			this.SendPropertyChanging();
			entity.gear = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.guild")]
	public partial class guild : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _owner;
		
		private string _name;
		
		private EntitySet<player> _players;
		
		private EntityRef<player> _player;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnownerChanging(System.Nullable<int> value);
    partial void OnownerChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public guild()
		{
			this._players = new EntitySet<player>(new Action<player>(this.attach_players), new Action<player>(this.detach_players));
			this._player = default(EntityRef<player>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner", DbType="Int")]
		public System.Nullable<int> owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				if ((this._owner != value))
				{
					if (this._player.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnownerChanging(value);
					this.SendPropertyChanging();
					this._owner = value;
					this.SendPropertyChanged("owner");
					this.OnownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(45)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="guild_player", Storage="_players", ThisKey="id", OtherKey="guild_id")]
		public EntitySet<player> players
		{
			get
			{
				return this._players;
			}
			set
			{
				this._players.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="player_guild", Storage="_player", ThisKey="owner", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public player player
		{
			get
			{
				return this._player.Entity;
			}
			set
			{
				player previousValue = this._player.Entity;
				if (((previousValue != value) 
							|| (this._player.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._player.Entity = null;
						previousValue.guilds.Remove(this);
					}
					this._player.Entity = value;
					if ((value != null))
					{
						value.guilds.Add(this);
						this._owner = value.id;
					}
					else
					{
						this._owner = default(Nullable<int>);
					}
					this.SendPropertyChanged("player");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_players(player entity)
		{
			this.SendPropertyChanging();
			entity.guild = this;
		}
		
		private void detach_players(player entity)
		{
			this.SendPropertyChanging();
			entity.guild = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.item")]
	public partial class item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _itemtype_id;
		
		private System.Nullable<int> _resistances_id;
		
		private System.Nullable<int> _styles_id;
		
		private EntitySet<container> _containers;
		
		private EntitySet<container_has_item> _container_has_items;
		
		private EntitySet<gear> _gears;
		
		private EntitySet<gear> _gears1;
		
		private EntitySet<gear> _gears2;
		
		private EntitySet<gear> _gears3;
		
		private EntitySet<gear> _gears4;
		
		private EntitySet<gear> _gears5;
		
		private EntitySet<gear> _gears6;
		
		private EntitySet<gear> _gears7;
		
		private EntitySet<gear> _gears8;
		
		private EntitySet<gear> _gears9;
		
		private EntityRef<itemtype> _itemtype;
		
		private EntityRef<resistance> _resistance;
		
		private EntityRef<style> _style;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onitemtype_idChanging(System.Nullable<int> value);
    partial void Onitemtype_idChanged();
    partial void Onresistances_idChanging(System.Nullable<int> value);
    partial void Onresistances_idChanged();
    partial void Onstyles_idChanging(System.Nullable<int> value);
    partial void Onstyles_idChanged();
    #endregion
		
		public item()
		{
			this._containers = new EntitySet<container>(new Action<container>(this.attach_containers), new Action<container>(this.detach_containers));
			this._container_has_items = new EntitySet<container_has_item>(new Action<container_has_item>(this.attach_container_has_items), new Action<container_has_item>(this.detach_container_has_items));
			this._gears = new EntitySet<gear>(new Action<gear>(this.attach_gears), new Action<gear>(this.detach_gears));
			this._gears1 = new EntitySet<gear>(new Action<gear>(this.attach_gears1), new Action<gear>(this.detach_gears1));
			this._gears2 = new EntitySet<gear>(new Action<gear>(this.attach_gears2), new Action<gear>(this.detach_gears2));
			this._gears3 = new EntitySet<gear>(new Action<gear>(this.attach_gears3), new Action<gear>(this.detach_gears3));
			this._gears4 = new EntitySet<gear>(new Action<gear>(this.attach_gears4), new Action<gear>(this.detach_gears4));
			this._gears5 = new EntitySet<gear>(new Action<gear>(this.attach_gears5), new Action<gear>(this.detach_gears5));
			this._gears6 = new EntitySet<gear>(new Action<gear>(this.attach_gears6), new Action<gear>(this.detach_gears6));
			this._gears7 = new EntitySet<gear>(new Action<gear>(this.attach_gears7), new Action<gear>(this.detach_gears7));
			this._gears8 = new EntitySet<gear>(new Action<gear>(this.attach_gears8), new Action<gear>(this.detach_gears8));
			this._gears9 = new EntitySet<gear>(new Action<gear>(this.attach_gears9), new Action<gear>(this.detach_gears9));
			this._itemtype = default(EntityRef<itemtype>);
			this._resistance = default(EntityRef<resistance>);
			this._style = default(EntityRef<style>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemtype_id", DbType="Int")]
		public System.Nullable<int> itemtype_id
		{
			get
			{
				return this._itemtype_id;
			}
			set
			{
				if ((this._itemtype_id != value))
				{
					if (this._itemtype.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitemtype_idChanging(value);
					this.SendPropertyChanging();
					this._itemtype_id = value;
					this.SendPropertyChanged("itemtype_id");
					this.Onitemtype_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resistances_id", DbType="Int")]
		public System.Nullable<int> resistances_id
		{
			get
			{
				return this._resistances_id;
			}
			set
			{
				if ((this._resistances_id != value))
				{
					if (this._resistance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onresistances_idChanging(value);
					this.SendPropertyChanging();
					this._resistances_id = value;
					this.SendPropertyChanged("resistances_id");
					this.Onresistances_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_styles_id", DbType="Int")]
		public System.Nullable<int> styles_id
		{
			get
			{
				return this._styles_id;
			}
			set
			{
				if ((this._styles_id != value))
				{
					if (this._style.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstyles_idChanging(value);
					this.SendPropertyChanging();
					this._styles_id = value;
					this.SendPropertyChanged("styles_id");
					this.Onstyles_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_container", Storage="_containers", ThisKey="id", OtherKey="item_id")]
		public EntitySet<container> containers
		{
			get
			{
				return this._containers;
			}
			set
			{
				this._containers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_container_has_item", Storage="_container_has_items", ThisKey="id", OtherKey="item_id")]
		public EntitySet<container_has_item> container_has_items
		{
			get
			{
				return this._container_has_items;
			}
			set
			{
				this._container_has_items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear", Storage="_gears", ThisKey="id", OtherKey="head")]
		public EntitySet<gear> gears
		{
			get
			{
				return this._gears;
			}
			set
			{
				this._gears.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear1", Storage="_gears1", ThisKey="id", OtherKey="righthand")]
		public EntitySet<gear> gears1
		{
			get
			{
				return this._gears1;
			}
			set
			{
				this._gears1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear2", Storage="_gears2", ThisKey="id", OtherKey="chest")]
		public EntitySet<gear> gears2
		{
			get
			{
				return this._gears2;
			}
			set
			{
				this._gears2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear3", Storage="_gears3", ThisKey="id", OtherKey="arms")]
		public EntitySet<gear> gears3
		{
			get
			{
				return this._gears3;
			}
			set
			{
				this._gears3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear4", Storage="_gears4", ThisKey="id", OtherKey="gloves")]
		public EntitySet<gear> gears4
		{
			get
			{
				return this._gears4;
			}
			set
			{
				this._gears4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear5", Storage="_gears5", ThisKey="id", OtherKey="legs")]
		public EntitySet<gear> gears5
		{
			get
			{
				return this._gears5;
			}
			set
			{
				this._gears5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear6", Storage="_gears6", ThisKey="id", OtherKey="shoes")]
		public EntitySet<gear> gears6
		{
			get
			{
				return this._gears6;
			}
			set
			{
				this._gears6.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear7", Storage="_gears7", ThisKey="id", OtherKey="ring")]
		public EntitySet<gear> gears7
		{
			get
			{
				return this._gears7;
			}
			set
			{
				this._gears7.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear8", Storage="_gears8", ThisKey="id", OtherKey="lefthand")]
		public EntitySet<gear> gears8
		{
			get
			{
				return this._gears8;
			}
			set
			{
				this._gears8.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_gear9", Storage="_gears9", ThisKey="id", OtherKey="bracelet")]
		public EntitySet<gear> gears9
		{
			get
			{
				return this._gears9;
			}
			set
			{
				this._gears9.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="itemtype_item", Storage="_itemtype", ThisKey="itemtype_id", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public itemtype itemtype
		{
			get
			{
				return this._itemtype.Entity;
			}
			set
			{
				itemtype previousValue = this._itemtype.Entity;
				if (((previousValue != value) 
							|| (this._itemtype.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._itemtype.Entity = null;
						previousValue.items.Remove(this);
					}
					this._itemtype.Entity = value;
					if ((value != null))
					{
						value.items.Add(this);
						this._itemtype_id = value.id;
					}
					else
					{
						this._itemtype_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("itemtype");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="resistance_item", Storage="_resistance", ThisKey="resistances_id", OtherKey="id", IsForeignKey=true)]
		public resistance resistance
		{
			get
			{
				return this._resistance.Entity;
			}
			set
			{
				resistance previousValue = this._resistance.Entity;
				if (((previousValue != value) 
							|| (this._resistance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._resistance.Entity = null;
						previousValue.items.Remove(this);
					}
					this._resistance.Entity = value;
					if ((value != null))
					{
						value.items.Add(this);
						this._resistances_id = value.id;
					}
					else
					{
						this._resistances_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("resistance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="style_item", Storage="_style", ThisKey="styles_id", OtherKey="id", IsForeignKey=true)]
		public style style
		{
			get
			{
				return this._style.Entity;
			}
			set
			{
				style previousValue = this._style.Entity;
				if (((previousValue != value) 
							|| (this._style.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._style.Entity = null;
						previousValue.items.Remove(this);
					}
					this._style.Entity = value;
					if ((value != null))
					{
						value.items.Add(this);
						this._styles_id = value.id;
					}
					else
					{
						this._styles_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("style");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_containers(container entity)
		{
			this.SendPropertyChanging();
			entity.item = this;
		}
		
		private void detach_containers(container entity)
		{
			this.SendPropertyChanging();
			entity.item = null;
		}
		
		private void attach_container_has_items(container_has_item entity)
		{
			this.SendPropertyChanging();
			entity.item = this;
		}
		
		private void detach_container_has_items(container_has_item entity)
		{
			this.SendPropertyChanging();
			entity.item = null;
		}
		
		private void attach_gears(gear entity)
		{
			this.SendPropertyChanging();
			entity.item = this;
		}
		
		private void detach_gears(gear entity)
		{
			this.SendPropertyChanging();
			entity.item = null;
		}
		
		private void attach_gears1(gear entity)
		{
			this.SendPropertyChanging();
			entity.item1 = this;
		}
		
		private void detach_gears1(gear entity)
		{
			this.SendPropertyChanging();
			entity.item1 = null;
		}
		
		private void attach_gears2(gear entity)
		{
			this.SendPropertyChanging();
			entity.item2 = this;
		}
		
		private void detach_gears2(gear entity)
		{
			this.SendPropertyChanging();
			entity.item2 = null;
		}
		
		private void attach_gears3(gear entity)
		{
			this.SendPropertyChanging();
			entity.item3 = this;
		}
		
		private void detach_gears3(gear entity)
		{
			this.SendPropertyChanging();
			entity.item3 = null;
		}
		
		private void attach_gears4(gear entity)
		{
			this.SendPropertyChanging();
			entity.item4 = this;
		}
		
		private void detach_gears4(gear entity)
		{
			this.SendPropertyChanging();
			entity.item4 = null;
		}
		
		private void attach_gears5(gear entity)
		{
			this.SendPropertyChanging();
			entity.item5 = this;
		}
		
		private void detach_gears5(gear entity)
		{
			this.SendPropertyChanging();
			entity.item5 = null;
		}
		
		private void attach_gears6(gear entity)
		{
			this.SendPropertyChanging();
			entity.item6 = this;
		}
		
		private void detach_gears6(gear entity)
		{
			this.SendPropertyChanging();
			entity.item6 = null;
		}
		
		private void attach_gears7(gear entity)
		{
			this.SendPropertyChanging();
			entity.item7 = this;
		}
		
		private void detach_gears7(gear entity)
		{
			this.SendPropertyChanging();
			entity.item7 = null;
		}
		
		private void attach_gears8(gear entity)
		{
			this.SendPropertyChanging();
			entity.item8 = this;
		}
		
		private void detach_gears8(gear entity)
		{
			this.SendPropertyChanging();
			entity.item8 = null;
		}
		
		private void attach_gears9(gear entity)
		{
			this.SendPropertyChanging();
			entity.item9 = this;
		}
		
		private void detach_gears9(gear entity)
		{
			this.SendPropertyChanging();
			entity.item9 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.itemtype")]
	public partial class itemtype : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _attributereq_id;
		
		private System.Nullable<int> _skillreq_id;
		
		private EntitySet<crafting> _craftings;
		
		private EntitySet<crafting> _craftings1;
		
		private EntitySet<item> _items;
		
		private EntitySet<spellreag> _spellreags;
		
		private EntityRef<attributereq> _attributereq;
		
		private EntityRef<skillreq> _skillreq;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onattributereq_idChanging(System.Nullable<int> value);
    partial void Onattributereq_idChanged();
    partial void Onskillreq_idChanging(System.Nullable<int> value);
    partial void Onskillreq_idChanged();
    #endregion
		
		public itemtype()
		{
			this._craftings = new EntitySet<crafting>(new Action<crafting>(this.attach_craftings), new Action<crafting>(this.detach_craftings));
			this._craftings1 = new EntitySet<crafting>(new Action<crafting>(this.attach_craftings1), new Action<crafting>(this.detach_craftings1));
			this._items = new EntitySet<item>(new Action<item>(this.attach_items), new Action<item>(this.detach_items));
			this._spellreags = new EntitySet<spellreag>(new Action<spellreag>(this.attach_spellreags), new Action<spellreag>(this.detach_spellreags));
			this._attributereq = default(EntityRef<attributereq>);
			this._skillreq = default(EntityRef<skillreq>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attributereq_id", DbType="Int")]
		public System.Nullable<int> attributereq_id
		{
			get
			{
				return this._attributereq_id;
			}
			set
			{
				if ((this._attributereq_id != value))
				{
					if (this._attributereq.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onattributereq_idChanging(value);
					this.SendPropertyChanging();
					this._attributereq_id = value;
					this.SendPropertyChanged("attributereq_id");
					this.Onattributereq_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skillreq_id", DbType="Int")]
		public System.Nullable<int> skillreq_id
		{
			get
			{
				return this._skillreq_id;
			}
			set
			{
				if ((this._skillreq_id != value))
				{
					if (this._skillreq.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onskillreq_idChanging(value);
					this.SendPropertyChanging();
					this._skillreq_id = value;
					this.SendPropertyChanged("skillreq_id");
					this.Onskillreq_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="itemtype_crafting", Storage="_craftings", ThisKey="id", OtherKey="resource_needed")]
		public EntitySet<crafting> craftings
		{
			get
			{
				return this._craftings;
			}
			set
			{
				this._craftings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="itemtype_crafting1", Storage="_craftings1", ThisKey="id", OtherKey="crafted_item")]
		public EntitySet<crafting> craftings1
		{
			get
			{
				return this._craftings1;
			}
			set
			{
				this._craftings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="itemtype_item", Storage="_items", ThisKey="id", OtherKey="itemtype_id")]
		public EntitySet<item> items
		{
			get
			{
				return this._items;
			}
			set
			{
				this._items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="itemtype_spellreag", Storage="_spellreags", ThisKey="id", OtherKey="itemtype_id")]
		public EntitySet<spellreag> spellreags
		{
			get
			{
				return this._spellreags;
			}
			set
			{
				this._spellreags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="attributereq_itemtype", Storage="_attributereq", ThisKey="attributereq_id", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public attributereq attributereq
		{
			get
			{
				return this._attributereq.Entity;
			}
			set
			{
				attributereq previousValue = this._attributereq.Entity;
				if (((previousValue != value) 
							|| (this._attributereq.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._attributereq.Entity = null;
						previousValue.itemtypes.Remove(this);
					}
					this._attributereq.Entity = value;
					if ((value != null))
					{
						value.itemtypes.Add(this);
						this._attributereq_id = value.id;
					}
					else
					{
						this._attributereq_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("attributereq");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="skillreq_itemtype", Storage="_skillreq", ThisKey="skillreq_id", OtherKey="id", IsForeignKey=true)]
		public skillreq skillreq
		{
			get
			{
				return this._skillreq.Entity;
			}
			set
			{
				skillreq previousValue = this._skillreq.Entity;
				if (((previousValue != value) 
							|| (this._skillreq.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._skillreq.Entity = null;
						previousValue.itemtypes.Remove(this);
					}
					this._skillreq.Entity = value;
					if ((value != null))
					{
						value.itemtypes.Add(this);
						this._skillreq_id = value.id;
					}
					else
					{
						this._skillreq_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("skillreq");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_craftings(crafting entity)
		{
			this.SendPropertyChanging();
			entity.itemtype = this;
		}
		
		private void detach_craftings(crafting entity)
		{
			this.SendPropertyChanging();
			entity.itemtype = null;
		}
		
		private void attach_craftings1(crafting entity)
		{
			this.SendPropertyChanging();
			entity.itemtype1 = this;
		}
		
		private void detach_craftings1(crafting entity)
		{
			this.SendPropertyChanging();
			entity.itemtype1 = null;
		}
		
		private void attach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.itemtype = this;
		}
		
		private void detach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.itemtype = null;
		}
		
		private void attach_spellreags(spellreag entity)
		{
			this.SendPropertyChanging();
			entity.itemtype = this;
		}
		
		private void detach_spellreags(spellreag entity)
		{
			this.SendPropertyChanging();
			entity.itemtype = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mobile")]
	public partial class mobile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _accesslevel;
		
		private System.Nullable<bool> _alive;
		
		private System.Nullable<int> _attributes_id;
		
		private System.Nullable<int> _backpack_id;
		
		private System.Nullable<int> _resistances_id;
		
		private System.Nullable<int> _gears_id;
		
		private System.Nullable<int> _styles_id;
		
		private System.Nullable<short> _model;
		
		private System.Nullable<short> _x;
		
		private System.Nullable<short> _y;
		
		private System.Nullable<short> _z;
		
		private System.Nullable<byte> _direction;
		
		private System.Nullable<short> _notoriety;
		
		private EntitySet<vendor> _vendors;
		
		private EntitySet<monster> _monsters;
		
		private EntitySet<npc> _npcs;
		
		private EntitySet<player> _players;
		
		private EntitySet<skill> _skills;
		
		private EntityRef<attribute> _attribute;
		
		private EntityRef<gear> _gear;
		
		private EntityRef<container> _container;
		
		private EntityRef<resistance> _resistance;
		
		private EntityRef<style> _style;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnaccesslevelChanging(string value);
    partial void OnaccesslevelChanged();
    partial void OnaliveChanging(System.Nullable<bool> value);
    partial void OnaliveChanged();
    partial void Onattributes_idChanging(System.Nullable<int> value);
    partial void Onattributes_idChanged();
    partial void Onbackpack_idChanging(System.Nullable<int> value);
    partial void Onbackpack_idChanged();
    partial void Onresistances_idChanging(System.Nullable<int> value);
    partial void Onresistances_idChanged();
    partial void Ongears_idChanging(System.Nullable<int> value);
    partial void Ongears_idChanged();
    partial void Onstyles_idChanging(System.Nullable<int> value);
    partial void Onstyles_idChanged();
    partial void OnmodelChanging(System.Nullable<short> value);
    partial void OnmodelChanged();
    partial void OnxChanging(System.Nullable<short> value);
    partial void OnxChanged();
    partial void OnyChanging(System.Nullable<short> value);
    partial void OnyChanged();
    partial void OnzChanging(System.Nullable<short> value);
    partial void OnzChanged();
    partial void OndirectionChanging(System.Nullable<byte> value);
    partial void OndirectionChanged();
    partial void OnnotorietyChanging(System.Nullable<short> value);
    partial void OnnotorietyChanged();
    #endregion
		
		public mobile()
		{
			this._vendors = new EntitySet<vendor>(new Action<vendor>(this.attach_vendors), new Action<vendor>(this.detach_vendors));
			this._monsters = new EntitySet<monster>(new Action<monster>(this.attach_monsters), new Action<monster>(this.detach_monsters));
			this._npcs = new EntitySet<npc>(new Action<npc>(this.attach_npcs), new Action<npc>(this.detach_npcs));
			this._players = new EntitySet<player>(new Action<player>(this.attach_players), new Action<player>(this.detach_players));
			this._skills = new EntitySet<skill>(new Action<skill>(this.attach_skills), new Action<skill>(this.detach_skills));
			this._attribute = default(EntityRef<attribute>);
			this._gear = default(EntityRef<gear>);
			this._container = default(EntityRef<container>);
			this._resistance = default(EntityRef<resistance>);
			this._style = default(EntityRef<style>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(20)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accesslevel", DbType="NChar(13)")]
		public string accesslevel
		{
			get
			{
				return this._accesslevel;
			}
			set
			{
				if ((this._accesslevel != value))
				{
					this.OnaccesslevelChanging(value);
					this.SendPropertyChanging();
					this._accesslevel = value;
					this.SendPropertyChanged("accesslevel");
					this.OnaccesslevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alive", DbType="Bit")]
		public System.Nullable<bool> alive
		{
			get
			{
				return this._alive;
			}
			set
			{
				if ((this._alive != value))
				{
					this.OnaliveChanging(value);
					this.SendPropertyChanging();
					this._alive = value;
					this.SendPropertyChanged("alive");
					this.OnaliveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attributes_id", DbType="Int")]
		public System.Nullable<int> attributes_id
		{
			get
			{
				return this._attributes_id;
			}
			set
			{
				if ((this._attributes_id != value))
				{
					if (this._attribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onattributes_idChanging(value);
					this.SendPropertyChanging();
					this._attributes_id = value;
					this.SendPropertyChanged("attributes_id");
					this.Onattributes_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_backpack_id", DbType="Int")]
		public System.Nullable<int> backpack_id
		{
			get
			{
				return this._backpack_id;
			}
			set
			{
				if ((this._backpack_id != value))
				{
					if (this._container.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbackpack_idChanging(value);
					this.SendPropertyChanging();
					this._backpack_id = value;
					this.SendPropertyChanged("backpack_id");
					this.Onbackpack_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resistances_id", DbType="Int")]
		public System.Nullable<int> resistances_id
		{
			get
			{
				return this._resistances_id;
			}
			set
			{
				if ((this._resistances_id != value))
				{
					if (this._resistance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onresistances_idChanging(value);
					this.SendPropertyChanging();
					this._resistances_id = value;
					this.SendPropertyChanged("resistances_id");
					this.Onresistances_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gears_id", DbType="Int")]
		public System.Nullable<int> gears_id
		{
			get
			{
				return this._gears_id;
			}
			set
			{
				if ((this._gears_id != value))
				{
					if (this._gear.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongears_idChanging(value);
					this.SendPropertyChanging();
					this._gears_id = value;
					this.SendPropertyChanged("gears_id");
					this.Ongears_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_styles_id", DbType="Int")]
		public System.Nullable<int> styles_id
		{
			get
			{
				return this._styles_id;
			}
			set
			{
				if ((this._styles_id != value))
				{
					if (this._style.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstyles_idChanging(value);
					this.SendPropertyChanging();
					this._styles_id = value;
					this.SendPropertyChanged("styles_id");
					this.Onstyles_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_model", DbType="SmallInt")]
		public System.Nullable<short> model
		{
			get
			{
				return this._model;
			}
			set
			{
				if ((this._model != value))
				{
					this.OnmodelChanging(value);
					this.SendPropertyChanging();
					this._model = value;
					this.SendPropertyChanged("model");
					this.OnmodelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x", DbType="SmallInt")]
		public System.Nullable<short> x
		{
			get
			{
				return this._x;
			}
			set
			{
				if ((this._x != value))
				{
					this.OnxChanging(value);
					this.SendPropertyChanging();
					this._x = value;
					this.SendPropertyChanged("x");
					this.OnxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y", DbType="SmallInt")]
		public System.Nullable<short> y
		{
			get
			{
				return this._y;
			}
			set
			{
				if ((this._y != value))
				{
					this.OnyChanging(value);
					this.SendPropertyChanging();
					this._y = value;
					this.SendPropertyChanged("y");
					this.OnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_z", DbType="SmallInt")]
		public System.Nullable<short> z
		{
			get
			{
				return this._z;
			}
			set
			{
				if ((this._z != value))
				{
					this.OnzChanging(value);
					this.SendPropertyChanging();
					this._z = value;
					this.SendPropertyChanged("z");
					this.OnzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direction", DbType="TinyInt")]
		public System.Nullable<byte> direction
		{
			get
			{
				return this._direction;
			}
			set
			{
				if ((this._direction != value))
				{
					this.OndirectionChanging(value);
					this.SendPropertyChanging();
					this._direction = value;
					this.SendPropertyChanged("direction");
					this.OndirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notoriety", DbType="SmallInt")]
		public System.Nullable<short> notoriety
		{
			get
			{
				return this._notoriety;
			}
			set
			{
				if ((this._notoriety != value))
				{
					this.OnnotorietyChanging(value);
					this.SendPropertyChanging();
					this._notoriety = value;
					this.SendPropertyChanged("notoriety");
					this.OnnotorietyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mobile_vendor", Storage="_vendors", ThisKey="id", OtherKey="mobile_id")]
		public EntitySet<vendor> vendors
		{
			get
			{
				return this._vendors;
			}
			set
			{
				this._vendors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mobile_monster", Storage="_monsters", ThisKey="id", OtherKey="mobile_id")]
		public EntitySet<monster> monsters
		{
			get
			{
				return this._monsters;
			}
			set
			{
				this._monsters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mobile_npc", Storage="_npcs", ThisKey="id", OtherKey="mobile_id")]
		public EntitySet<npc> npcs
		{
			get
			{
				return this._npcs;
			}
			set
			{
				this._npcs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mobile_player", Storage="_players", ThisKey="id", OtherKey="mobile_id")]
		public EntitySet<player> players
		{
			get
			{
				return this._players;
			}
			set
			{
				this._players.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mobile_skill", Storage="_skills", ThisKey="id", OtherKey="mobile_id")]
		public EntitySet<skill> skills
		{
			get
			{
				return this._skills;
			}
			set
			{
				this._skills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="attribute_mobile", Storage="_attribute", ThisKey="attributes_id", OtherKey="id", IsForeignKey=true)]
		public attribute attribute
		{
			get
			{
				return this._attribute.Entity;
			}
			set
			{
				attribute previousValue = this._attribute.Entity;
				if (((previousValue != value) 
							|| (this._attribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._attribute.Entity = null;
						previousValue.mobiles.Remove(this);
					}
					this._attribute.Entity = value;
					if ((value != null))
					{
						value.mobiles.Add(this);
						this._attributes_id = value.id;
					}
					else
					{
						this._attributes_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("attribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="gear_mobile", Storage="_gear", ThisKey="gears_id", OtherKey="id", IsForeignKey=true)]
		public gear gear
		{
			get
			{
				return this._gear.Entity;
			}
			set
			{
				gear previousValue = this._gear.Entity;
				if (((previousValue != value) 
							|| (this._gear.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._gear.Entity = null;
						previousValue.mobiles.Remove(this);
					}
					this._gear.Entity = value;
					if ((value != null))
					{
						value.mobiles.Add(this);
						this._gears_id = value.id;
					}
					else
					{
						this._gears_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("gear");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="container_mobile", Storage="_container", ThisKey="backpack_id", OtherKey="id", IsForeignKey=true)]
		public container container
		{
			get
			{
				return this._container.Entity;
			}
			set
			{
				container previousValue = this._container.Entity;
				if (((previousValue != value) 
							|| (this._container.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._container.Entity = null;
						previousValue.mobiles.Remove(this);
					}
					this._container.Entity = value;
					if ((value != null))
					{
						value.mobiles.Add(this);
						this._backpack_id = value.id;
					}
					else
					{
						this._backpack_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("container");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="resistance_mobile", Storage="_resistance", ThisKey="resistances_id", OtherKey="id", IsForeignKey=true)]
		public resistance resistance
		{
			get
			{
				return this._resistance.Entity;
			}
			set
			{
				resistance previousValue = this._resistance.Entity;
				if (((previousValue != value) 
							|| (this._resistance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._resistance.Entity = null;
						previousValue.mobiles.Remove(this);
					}
					this._resistance.Entity = value;
					if ((value != null))
					{
						value.mobiles.Add(this);
						this._resistances_id = value.id;
					}
					else
					{
						this._resistances_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("resistance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="style_mobile", Storage="_style", ThisKey="styles_id", OtherKey="id", IsForeignKey=true)]
		public style style
		{
			get
			{
				return this._style.Entity;
			}
			set
			{
				style previousValue = this._style.Entity;
				if (((previousValue != value) 
							|| (this._style.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._style.Entity = null;
						previousValue.mobiles.Remove(this);
					}
					this._style.Entity = value;
					if ((value != null))
					{
						value.mobiles.Add(this);
						this._styles_id = value.id;
					}
					else
					{
						this._styles_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("style");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_vendors(vendor entity)
		{
			this.SendPropertyChanging();
			entity.mobile = this;
		}
		
		private void detach_vendors(vendor entity)
		{
			this.SendPropertyChanging();
			entity.mobile = null;
		}
		
		private void attach_monsters(monster entity)
		{
			this.SendPropertyChanging();
			entity.mobile = this;
		}
		
		private void detach_monsters(monster entity)
		{
			this.SendPropertyChanging();
			entity.mobile = null;
		}
		
		private void attach_npcs(npc entity)
		{
			this.SendPropertyChanging();
			entity.mobile = this;
		}
		
		private void detach_npcs(npc entity)
		{
			this.SendPropertyChanging();
			entity.mobile = null;
		}
		
		private void attach_players(player entity)
		{
			this.SendPropertyChanging();
			entity.mobile = this;
		}
		
		private void detach_players(player entity)
		{
			this.SendPropertyChanging();
			entity.mobile = null;
		}
		
		private void attach_skills(skill entity)
		{
			this.SendPropertyChanging();
			entity.mobile = this;
		}
		
		private void detach_skills(skill entity)
		{
			this.SendPropertyChanging();
			entity.mobile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.monster")]
	public partial class monster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _mobile_id;
		
		private EntityRef<mobile> _mobile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onmobile_idChanging(System.Nullable<int> value);
    partial void Onmobile_idChanged();
    #endregion
		
		public monster()
		{
			this._mobile = default(EntityRef<mobile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile_id", DbType="Int")]
		public System.Nullable<int> mobile_id
		{
			get
			{
				return this._mobile_id;
			}
			set
			{
				if ((this._mobile_id != value))
				{
					if (this._mobile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmobile_idChanging(value);
					this.SendPropertyChanging();
					this._mobile_id = value;
					this.SendPropertyChanged("mobile_id");
					this.Onmobile_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mobile_monster", Storage="_mobile", ThisKey="mobile_id", OtherKey="id", IsForeignKey=true)]
		public mobile mobile
		{
			get
			{
				return this._mobile.Entity;
			}
			set
			{
				mobile previousValue = this._mobile.Entity;
				if (((previousValue != value) 
							|| (this._mobile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mobile.Entity = null;
						previousValue.monsters.Remove(this);
					}
					this._mobile.Entity = value;
					if ((value != null))
					{
						value.monsters.Add(this);
						this._mobile_id = value.id;
					}
					else
					{
						this._mobile_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("mobile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.npc")]
	public partial class npc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _mobile_id;
		
		private EntityRef<mobile> _mobile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onmobile_idChanging(System.Nullable<int> value);
    partial void Onmobile_idChanged();
    #endregion
		
		public npc()
		{
			this._mobile = default(EntityRef<mobile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile_id", DbType="Int")]
		public System.Nullable<int> mobile_id
		{
			get
			{
				return this._mobile_id;
			}
			set
			{
				if ((this._mobile_id != value))
				{
					if (this._mobile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmobile_idChanging(value);
					this.SendPropertyChanging();
					this._mobile_id = value;
					this.SendPropertyChanged("mobile_id");
					this.Onmobile_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mobile_npc", Storage="_mobile", ThisKey="mobile_id", OtherKey="id", IsForeignKey=true)]
		public mobile mobile
		{
			get
			{
				return this._mobile.Entity;
			}
			set
			{
				mobile previousValue = this._mobile.Entity;
				if (((previousValue != value) 
							|| (this._mobile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mobile.Entity = null;
						previousValue.npcs.Remove(this);
					}
					this._mobile.Entity = value;
					if ((value != null))
					{
						value.npcs.Add(this);
						this._mobile_id = value.id;
					}
					else
					{
						this._mobile_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("mobile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.player")]
	public partial class player : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _account_id;
		
		private System.Nullable<int> _bank_id;
		
		private System.Nullable<int> _mobile_id;
		
		private System.Nullable<int> _guild_id;
		
		private EntitySet<vendor> _vendors;
		
		private EntitySet<guild> _guilds;
		
		private EntityRef<account> _account;
		
		private EntityRef<bank> _bank;
		
		private EntityRef<mobile> _mobile;
		
		private EntityRef<guild> _guild;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onaccount_idChanging(System.Nullable<int> value);
    partial void Onaccount_idChanged();
    partial void Onbank_idChanging(System.Nullable<int> value);
    partial void Onbank_idChanged();
    partial void Onmobile_idChanging(System.Nullable<int> value);
    partial void Onmobile_idChanged();
    partial void Onguild_idChanging(System.Nullable<int> value);
    partial void Onguild_idChanged();
    #endregion
		
		public player()
		{
			this._vendors = new EntitySet<vendor>(new Action<vendor>(this.attach_vendors), new Action<vendor>(this.detach_vendors));
			this._guilds = new EntitySet<guild>(new Action<guild>(this.attach_guilds), new Action<guild>(this.detach_guilds));
			this._account = default(EntityRef<account>);
			this._bank = default(EntityRef<bank>);
			this._mobile = default(EntityRef<mobile>);
			this._guild = default(EntityRef<guild>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_id", DbType="Int")]
		public System.Nullable<int> account_id
		{
			get
			{
				return this._account_id;
			}
			set
			{
				if ((this._account_id != value))
				{
					if (this._account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaccount_idChanging(value);
					this.SendPropertyChanging();
					this._account_id = value;
					this.SendPropertyChanged("account_id");
					this.Onaccount_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bank_id", DbType="Int")]
		public System.Nullable<int> bank_id
		{
			get
			{
				return this._bank_id;
			}
			set
			{
				if ((this._bank_id != value))
				{
					if (this._bank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbank_idChanging(value);
					this.SendPropertyChanging();
					this._bank_id = value;
					this.SendPropertyChanged("bank_id");
					this.Onbank_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile_id", DbType="Int")]
		public System.Nullable<int> mobile_id
		{
			get
			{
				return this._mobile_id;
			}
			set
			{
				if ((this._mobile_id != value))
				{
					if (this._mobile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmobile_idChanging(value);
					this.SendPropertyChanging();
					this._mobile_id = value;
					this.SendPropertyChanged("mobile_id");
					this.Onmobile_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guild_id", DbType="Int")]
		public System.Nullable<int> guild_id
		{
			get
			{
				return this._guild_id;
			}
			set
			{
				if ((this._guild_id != value))
				{
					if (this._guild.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onguild_idChanging(value);
					this.SendPropertyChanging();
					this._guild_id = value;
					this.SendPropertyChanged("guild_id");
					this.Onguild_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="player_vendor", Storage="_vendors", ThisKey="id", OtherKey="player_id")]
		public EntitySet<vendor> vendors
		{
			get
			{
				return this._vendors;
			}
			set
			{
				this._vendors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="player_guild", Storage="_guilds", ThisKey="id", OtherKey="owner")]
		public EntitySet<guild> guilds
		{
			get
			{
				return this._guilds;
			}
			set
			{
				this._guilds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_player", Storage="_account", ThisKey="account_id", OtherKey="id", IsForeignKey=true)]
		public account account
		{
			get
			{
				return this._account.Entity;
			}
			set
			{
				account previousValue = this._account.Entity;
				if (((previousValue != value) 
							|| (this._account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account.Entity = null;
						previousValue.players.Remove(this);
					}
					this._account.Entity = value;
					if ((value != null))
					{
						value.players.Add(this);
						this._account_id = value.id;
					}
					else
					{
						this._account_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bank_player", Storage="_bank", ThisKey="bank_id", OtherKey="id", IsForeignKey=true)]
		public bank bank
		{
			get
			{
				return this._bank.Entity;
			}
			set
			{
				bank previousValue = this._bank.Entity;
				if (((previousValue != value) 
							|| (this._bank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bank.Entity = null;
						previousValue.players.Remove(this);
					}
					this._bank.Entity = value;
					if ((value != null))
					{
						value.players.Add(this);
						this._bank_id = value.id;
					}
					else
					{
						this._bank_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("bank");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mobile_player", Storage="_mobile", ThisKey="mobile_id", OtherKey="id", IsForeignKey=true)]
		public mobile mobile
		{
			get
			{
				return this._mobile.Entity;
			}
			set
			{
				mobile previousValue = this._mobile.Entity;
				if (((previousValue != value) 
							|| (this._mobile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mobile.Entity = null;
						previousValue.players.Remove(this);
					}
					this._mobile.Entity = value;
					if ((value != null))
					{
						value.players.Add(this);
						this._mobile_id = value.id;
					}
					else
					{
						this._mobile_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("mobile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="guild_player", Storage="_guild", ThisKey="guild_id", OtherKey="id", IsForeignKey=true)]
		public guild guild
		{
			get
			{
				return this._guild.Entity;
			}
			set
			{
				guild previousValue = this._guild.Entity;
				if (((previousValue != value) 
							|| (this._guild.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._guild.Entity = null;
						previousValue.players.Remove(this);
					}
					this._guild.Entity = value;
					if ((value != null))
					{
						value.players.Add(this);
						this._guild_id = value.id;
					}
					else
					{
						this._guild_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("guild");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_vendors(vendor entity)
		{
			this.SendPropertyChanging();
			entity.player = this;
		}
		
		private void detach_vendors(vendor entity)
		{
			this.SendPropertyChanging();
			entity.player = null;
		}
		
		private void attach_guilds(guild entity)
		{
			this.SendPropertyChanging();
			entity.player = this;
		}
		
		private void detach_guilds(guild entity)
		{
			this.SendPropertyChanging();
			entity.player = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.resistances")]
	public partial class resistance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private EntitySet<item> _items;
		
		private EntitySet<mobile> _mobiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public resistance()
		{
			this._items = new EntitySet<item>(new Action<item>(this.attach_items), new Action<item>(this.detach_items));
			this._mobiles = new EntitySet<mobile>(new Action<mobile>(this.attach_mobiles), new Action<mobile>(this.detach_mobiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="resistance_item", Storage="_items", ThisKey="id", OtherKey="resistances_id")]
		public EntitySet<item> items
		{
			get
			{
				return this._items;
			}
			set
			{
				this._items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="resistance_mobile", Storage="_mobiles", ThisKey="id", OtherKey="resistances_id")]
		public EntitySet<mobile> mobiles
		{
			get
			{
				return this._mobiles;
			}
			set
			{
				this._mobiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.resistance = this;
		}
		
		private void detach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.resistance = null;
		}
		
		private void attach_mobiles(mobile entity)
		{
			this.SendPropertyChanging();
			entity.resistance = this;
		}
		
		private void detach_mobiles(mobile entity)
		{
			this.SendPropertyChanging();
			entity.resistance = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.skill")]
	public partial class skill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _skilllist_id;
		
		private System.Nullable<double> _value;
		
		private System.Nullable<int> _mobile_id;
		
		private EntitySet<skillreq> _skillreqs;
		
		private EntityRef<mobile> _mobile;
		
		private EntityRef<skilllist> _skilllist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onskilllist_idChanging(System.Nullable<int> value);
    partial void Onskilllist_idChanged();
    partial void OnvalueChanging(System.Nullable<double> value);
    partial void OnvalueChanged();
    partial void Onmobile_idChanging(System.Nullable<int> value);
    partial void Onmobile_idChanged();
    #endregion
		
		public skill()
		{
			this._skillreqs = new EntitySet<skillreq>(new Action<skillreq>(this.attach_skillreqs), new Action<skillreq>(this.detach_skillreqs));
			this._mobile = default(EntityRef<mobile>);
			this._skilllist = default(EntityRef<skilllist>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skilllist_id", DbType="Int")]
		public System.Nullable<int> skilllist_id
		{
			get
			{
				return this._skilllist_id;
			}
			set
			{
				if ((this._skilllist_id != value))
				{
					if (this._skilllist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onskilllist_idChanging(value);
					this.SendPropertyChanging();
					this._skilllist_id = value;
					this.SendPropertyChanged("skilllist_id");
					this.Onskilllist_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Float")]
		public System.Nullable<double> value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile_id", DbType="Int")]
		public System.Nullable<int> mobile_id
		{
			get
			{
				return this._mobile_id;
			}
			set
			{
				if ((this._mobile_id != value))
				{
					if (this._mobile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmobile_idChanging(value);
					this.SendPropertyChanging();
					this._mobile_id = value;
					this.SendPropertyChanged("mobile_id");
					this.Onmobile_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="skill_skillreq", Storage="_skillreqs", ThisKey="id", OtherKey="skill_id")]
		public EntitySet<skillreq> skillreqs
		{
			get
			{
				return this._skillreqs;
			}
			set
			{
				this._skillreqs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mobile_skill", Storage="_mobile", ThisKey="mobile_id", OtherKey="id", IsForeignKey=true)]
		public mobile mobile
		{
			get
			{
				return this._mobile.Entity;
			}
			set
			{
				mobile previousValue = this._mobile.Entity;
				if (((previousValue != value) 
							|| (this._mobile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mobile.Entity = null;
						previousValue.skills.Remove(this);
					}
					this._mobile.Entity = value;
					if ((value != null))
					{
						value.skills.Add(this);
						this._mobile_id = value.id;
					}
					else
					{
						this._mobile_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("mobile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="skilllist_skill", Storage="_skilllist", ThisKey="skilllist_id", OtherKey="id", IsForeignKey=true)]
		public skilllist skilllist
		{
			get
			{
				return this._skilllist.Entity;
			}
			set
			{
				skilllist previousValue = this._skilllist.Entity;
				if (((previousValue != value) 
							|| (this._skilllist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._skilllist.Entity = null;
						previousValue.skills.Remove(this);
					}
					this._skilllist.Entity = value;
					if ((value != null))
					{
						value.skills.Add(this);
						this._skilllist_id = value.id;
					}
					else
					{
						this._skilllist_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("skilllist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_skillreqs(skillreq entity)
		{
			this.SendPropertyChanging();
			entity.skill = this;
		}
		
		private void detach_skillreqs(skillreq entity)
		{
			this.SendPropertyChanging();
			entity.skill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.skilllist")]
	public partial class skilllist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<skill> _skills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public skilllist()
		{
			this._skills = new EntitySet<skill>(new Action<skill>(this.attach_skills), new Action<skill>(this.detach_skills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(45)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="skilllist_skill", Storage="_skills", ThisKey="id", OtherKey="skilllist_id")]
		public EntitySet<skill> skills
		{
			get
			{
				return this._skills;
			}
			set
			{
				this._skills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_skills(skill entity)
		{
			this.SendPropertyChanging();
			entity.skilllist = this;
		}
		
		private void detach_skills(skill entity)
		{
			this.SendPropertyChanging();
			entity.skilllist = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.skillreq")]
	public partial class skillreq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _skill_id;
		
		private System.Nullable<double> _value;
		
		private EntitySet<itemtype> _itemtypes;
		
		private EntitySet<spell> _spells;
		
		private EntityRef<skill> _skill;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onskill_idChanging(System.Nullable<int> value);
    partial void Onskill_idChanged();
    partial void OnvalueChanging(System.Nullable<double> value);
    partial void OnvalueChanged();
    #endregion
		
		public skillreq()
		{
			this._itemtypes = new EntitySet<itemtype>(new Action<itemtype>(this.attach_itemtypes), new Action<itemtype>(this.detach_itemtypes));
			this._spells = new EntitySet<spell>(new Action<spell>(this.attach_spells), new Action<spell>(this.detach_spells));
			this._skill = default(EntityRef<skill>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skill_id", DbType="Int")]
		public System.Nullable<int> skill_id
		{
			get
			{
				return this._skill_id;
			}
			set
			{
				if ((this._skill_id != value))
				{
					if (this._skill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onskill_idChanging(value);
					this.SendPropertyChanging();
					this._skill_id = value;
					this.SendPropertyChanged("skill_id");
					this.Onskill_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Float")]
		public System.Nullable<double> value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="skillreq_itemtype", Storage="_itemtypes", ThisKey="id", OtherKey="skillreq_id")]
		public EntitySet<itemtype> itemtypes
		{
			get
			{
				return this._itemtypes;
			}
			set
			{
				this._itemtypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="skillreq_spell", Storage="_spells", ThisKey="id", OtherKey="skillreq_id")]
		public EntitySet<spell> spells
		{
			get
			{
				return this._spells;
			}
			set
			{
				this._spells.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="skill_skillreq", Storage="_skill", ThisKey="skill_id", OtherKey="id", IsForeignKey=true)]
		public skill skill
		{
			get
			{
				return this._skill.Entity;
			}
			set
			{
				skill previousValue = this._skill.Entity;
				if (((previousValue != value) 
							|| (this._skill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._skill.Entity = null;
						previousValue.skillreqs.Remove(this);
					}
					this._skill.Entity = value;
					if ((value != null))
					{
						value.skillreqs.Add(this);
						this._skill_id = value.id;
					}
					else
					{
						this._skill_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("skill");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_itemtypes(itemtype entity)
		{
			this.SendPropertyChanging();
			entity.skillreq = this;
		}
		
		private void detach_itemtypes(itemtype entity)
		{
			this.SendPropertyChanging();
			entity.skillreq = null;
		}
		
		private void attach_spells(spell entity)
		{
			this.SendPropertyChanging();
			entity.skillreq = this;
		}
		
		private void detach_spells(spell entity)
		{
			this.SendPropertyChanging();
			entity.skillreq = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.spell")]
	public partial class spell : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _skillreq_id;
		
		private System.Nullable<int> _attributereq_id;
		
		private string _name;
		
		private EntitySet<spellreag> _spellreags;
		
		private EntityRef<skillreq> _skillreq;
		
		private EntityRef<attributereq> _attributereq;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onskillreq_idChanging(System.Nullable<int> value);
    partial void Onskillreq_idChanged();
    partial void Onattributereq_idChanging(System.Nullable<int> value);
    partial void Onattributereq_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public spell()
		{
			this._spellreags = new EntitySet<spellreag>(new Action<spellreag>(this.attach_spellreags), new Action<spellreag>(this.detach_spellreags));
			this._skillreq = default(EntityRef<skillreq>);
			this._attributereq = default(EntityRef<attributereq>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skillreq_id", DbType="Int")]
		public System.Nullable<int> skillreq_id
		{
			get
			{
				return this._skillreq_id;
			}
			set
			{
				if ((this._skillreq_id != value))
				{
					if (this._skillreq.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onskillreq_idChanging(value);
					this.SendPropertyChanging();
					this._skillreq_id = value;
					this.SendPropertyChanged("skillreq_id");
					this.Onskillreq_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attributereq_id", DbType="Int")]
		public System.Nullable<int> attributereq_id
		{
			get
			{
				return this._attributereq_id;
			}
			set
			{
				if ((this._attributereq_id != value))
				{
					if (this._attributereq.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onattributereq_idChanging(value);
					this.SendPropertyChanging();
					this._attributereq_id = value;
					this.SendPropertyChanged("attributereq_id");
					this.Onattributereq_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(45)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="spell_spellreag", Storage="_spellreags", ThisKey="id", OtherKey="spell_id")]
		public EntitySet<spellreag> spellreags
		{
			get
			{
				return this._spellreags;
			}
			set
			{
				this._spellreags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="skillreq_spell", Storage="_skillreq", ThisKey="skillreq_id", OtherKey="id", IsForeignKey=true)]
		public skillreq skillreq
		{
			get
			{
				return this._skillreq.Entity;
			}
			set
			{
				skillreq previousValue = this._skillreq.Entity;
				if (((previousValue != value) 
							|| (this._skillreq.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._skillreq.Entity = null;
						previousValue.spells.Remove(this);
					}
					this._skillreq.Entity = value;
					if ((value != null))
					{
						value.spells.Add(this);
						this._skillreq_id = value.id;
					}
					else
					{
						this._skillreq_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("skillreq");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="attributereq_spell", Storage="_attributereq", ThisKey="attributereq_id", OtherKey="id", IsForeignKey=true)]
		public attributereq attributereq
		{
			get
			{
				return this._attributereq.Entity;
			}
			set
			{
				attributereq previousValue = this._attributereq.Entity;
				if (((previousValue != value) 
							|| (this._attributereq.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._attributereq.Entity = null;
						previousValue.spells.Remove(this);
					}
					this._attributereq.Entity = value;
					if ((value != null))
					{
						value.spells.Add(this);
						this._attributereq_id = value.id;
					}
					else
					{
						this._attributereq_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("attributereq");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_spellreags(spellreag entity)
		{
			this.SendPropertyChanging();
			entity.spell = this;
		}
		
		private void detach_spellreags(spellreag entity)
		{
			this.SendPropertyChanging();
			entity.spell = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.spellreag")]
	public partial class spellreag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _itemtype_id;
		
		private string _quantity;
		
		private System.Nullable<int> _spell_id;
		
		private EntityRef<itemtype> _itemtype;
		
		private EntityRef<spell> _spell;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onitemtype_idChanging(System.Nullable<int> value);
    partial void Onitemtype_idChanged();
    partial void OnquantityChanging(string value);
    partial void OnquantityChanged();
    partial void Onspell_idChanging(System.Nullable<int> value);
    partial void Onspell_idChanged();
    #endregion
		
		public spellreag()
		{
			this._itemtype = default(EntityRef<itemtype>);
			this._spell = default(EntityRef<spell>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemtype_id", DbType="Int")]
		public System.Nullable<int> itemtype_id
		{
			get
			{
				return this._itemtype_id;
			}
			set
			{
				if ((this._itemtype_id != value))
				{
					if (this._itemtype.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitemtype_idChanging(value);
					this.SendPropertyChanging();
					this._itemtype_id = value;
					this.SendPropertyChanged("itemtype_id");
					this.Onitemtype_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="NVarChar(45)")]
		public string quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spell_id", DbType="Int")]
		public System.Nullable<int> spell_id
		{
			get
			{
				return this._spell_id;
			}
			set
			{
				if ((this._spell_id != value))
				{
					if (this._spell.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onspell_idChanging(value);
					this.SendPropertyChanging();
					this._spell_id = value;
					this.SendPropertyChanged("spell_id");
					this.Onspell_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="itemtype_spellreag", Storage="_itemtype", ThisKey="itemtype_id", OtherKey="id", IsForeignKey=true)]
		public itemtype itemtype
		{
			get
			{
				return this._itemtype.Entity;
			}
			set
			{
				itemtype previousValue = this._itemtype.Entity;
				if (((previousValue != value) 
							|| (this._itemtype.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._itemtype.Entity = null;
						previousValue.spellreags.Remove(this);
					}
					this._itemtype.Entity = value;
					if ((value != null))
					{
						value.spellreags.Add(this);
						this._itemtype_id = value.id;
					}
					else
					{
						this._itemtype_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("itemtype");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="spell_spellreag", Storage="_spell", ThisKey="spell_id", OtherKey="id", IsForeignKey=true)]
		public spell spell
		{
			get
			{
				return this._spell.Entity;
			}
			set
			{
				spell previousValue = this._spell.Entity;
				if (((previousValue != value) 
							|| (this._spell.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._spell.Entity = null;
						previousValue.spellreags.Remove(this);
					}
					this._spell.Entity = value;
					if ((value != null))
					{
						value.spellreags.Add(this);
						this._spell_id = value.id;
					}
					else
					{
						this._spell_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("spell");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.styles")]
	public partial class style : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private EntitySet<item> _items;
		
		private EntitySet<mobile> _mobiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public style()
		{
			this._items = new EntitySet<item>(new Action<item>(this.attach_items), new Action<item>(this.detach_items));
			this._mobiles = new EntitySet<mobile>(new Action<mobile>(this.attach_mobiles), new Action<mobile>(this.detach_mobiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="style_item", Storage="_items", ThisKey="id", OtherKey="styles_id")]
		public EntitySet<item> items
		{
			get
			{
				return this._items;
			}
			set
			{
				this._items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="style_mobile", Storage="_mobiles", ThisKey="id", OtherKey="styles_id")]
		public EntitySet<mobile> mobiles
		{
			get
			{
				return this._mobiles;
			}
			set
			{
				this._mobiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.style = this;
		}
		
		private void detach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.style = null;
		}
		
		private void attach_mobiles(mobile entity)
		{
			this.SendPropertyChanging();
			entity.style = this;
		}
		
		private void detach_mobiles(mobile entity)
		{
			this.SendPropertyChanging();
			entity.style = null;
		}
	}
}
#pragma warning restore 1591
